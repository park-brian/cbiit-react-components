import React from 'react';
import { action } from '@storybook/addon-actions';
import { ButtonGroup } from '../button-group/button-group';
import { CodeRenderer } from '../code-renderer/code-renderer';
import '../index.scss';

export default {
    title: 'ButtonGroup',
    component: ButtonGroup,
};


export function Documentation() {
    return <div className="m-2">
        <h1>ButtonGroup</h1>
        <hr />

        <section className="mb-4">
            <h2>Import</h2>
            <CodeRenderer code="import { ButtonGroup } from '@cbiitss/react-components';" />
        </section>

        <section className="mb-4">
            <h2>Sample Usage</h2>
            <div className="mb-2">
                <ButtonGroup
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]}
                    value="a"
                    onChange={value => alert(value)} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup 
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]}
                value="a" 
                onChange={value => alert(value)} />`} />
        </section>


        <section className="mb-4">
            <h2>Properties</h2>
            <table className="table">
                <thead>
                    <tr>
                        <th>Property</th>
                        <th>Type</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>name</td>
                        <td>String</td>
                        <td>Specifies the name of the radio button group generated by this control. Defaults to 'button-group'.</td>
                    </tr>
                    <tr>
                        <td>options</td>
                        <td>{`{label: String, value: String}[]`}</td>
                        <td>An array of selectable options. Each option has label and value properties.</td>
                    </tr>
                    <tr>
                        <td>value</td>
                        <td>String</td>
                        <td>The currently selected value.</td>
                    </tr>
                    <tr>
                        <td>onChange</td>
                        <td>Function</td>
                        <td>Registers an event handler for when this control's value changes. The first parameter passed to the event handler is the new value.</td>
                    </tr>
                    <tr>
                        <td>size</td>
                        <td>'lg', 'sm'</td>
                        <td>Specifies the size of this control.</td>
                    </tr>
                    <tr>
                        <td>disabled</td>
                        <td>Boolean</td>
                        <td>Specifies if this control is disabled or not.</td>
                    </tr>
                    <tr>
                        <td>activeClass</td>
                        <td>String</td>
                        <td>Specifies the classes to be applied to the currently selected option. Defaults to 'btn-primary active'.</td>
                    </tr>
                    <tr>
                        <td>inactiveClass</td>
                        <td>String</td>
                        <td>Specifies the classes to be applied to non-selected options. Defaults to 'btn-light'.</td>
                    </tr>
                </tbody>
            </table>
        </section>
    </div>
}

export function Examples() {
    return <div className="m-2">
        <h1>Examples</h1>
        <hr />
        <section className="mb-4">
            <h2>Default</h2>
            <div className="mb-2">
                <ButtonGroup
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]} 
            />`} />
        </section>


        <section className="mb-4">
            <h2>Active (Selected Value)</h2>
            <div className="mb-2">
                <ButtonGroup
                    value="a"
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup
                value="a"
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]} 
            />`} />
        </section>



        <section className="mb-4">
            <h2>Custom Active/Inactive Classes</h2>
            <div className="mb-2">
                <ButtonGroup
                    activeClass="btn-success active"
                    inactiveClass="btn-dark"
                    value="a"
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup
                activeClass="btn-success active"
                inactiveClass="btn-dark"
                value="a"
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]} 
            />`} />
        </section>

        <section className="mb-4">
            <h2>Disabled</h2>
            <div className="mb-2">
                <ButtonGroup
                    disabled
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup
                disabled
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]} 
            />`} />
        </section>
    </div>
}

export function EventHandlers() {
    return <div className="m-2">
        <h1>Event Handlers</h1>
        <hr />

        <section className="mb-4">
            <h2>onChange</h2>
            <div className="mb-2">
                <ButtonGroup
                    options={[
                        { label: "Option A", value: "a" },
                        { label: "Option B", value: "b" },
                        { label: "Option C", value: "c" },
                    ]}
                    value="a"
                    onChange={value => alert(value)} />
            </div>
            <CodeRenderer removeIndentation code={`
            <ButtonGroup 
                options={[
                    { label: "Option A", value: "a" },
                    { label: "Option B", value: "b" },
                    { label: "Option C", value: "c" },
                ]}
                value="a" 
                onChange={value => alert(value)} />`} />
        </section>
    </div>
}